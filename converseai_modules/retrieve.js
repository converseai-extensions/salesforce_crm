/**
 * @file retrieve.js
 * @author scott@converse.ai
 *
 * Generated by the converse-cli tool for use with the Converse AI
 * Plugins SDK. https://developers.converse.ai/
 */

'use strict';

const Status = require('@converseai/plugins-sdk').Status;
const ModuleResponse = require('@converseai/plugins-sdk').Payloads.ModuleResponse;
const ErrorResponse = require('@converseai/plugins-sdk').Payloads.ErrorResponse;
const Utils = require('../lib/utils.js');

module.exports = function retrieve(app, body) {

  var tableName = body.payload.moduleParam.table_name;
  if (!tableName) {
    app.send(Status.FAIL, new ErrorResponse(400, "INTERNAL", "No record name has been specified"));
    return;
  }

  var recordId = body.payload.moduleParam.record_id;
  if (!recordId) {
    app.send(Status.FAIL, new ErrorResponse(400, "INTERNAL", "No record id has been specified"));
    return;
  }

  var oauthToken = body.payload.invokerOAuth;
  if (!oauthToken) {
    app.send(Status.NEED_AUTH, null);
    return;
  }

  var conn = Utils.createConnection(oauthToken, body);
  if (conn.error != null) {
    if (conn.needAuth) {
      app.send(Status.NEED_AUTH, null);
      return;
    }
    app.send(Status.FAIL, new ErrorResponse(400, "INTERNAL", conn.error));
    return;
  }

  conn.sobject(tableName).retrieve(recordId, function(err, obj) {
    if (err) {
      if (err.name == "invalid_grant") {
        app.send(Status.NEED_AUTH, null);
        return;
      }
      var errString = "Retrieve failed " + String(err);
      console.error(errString);
      app.send(Status.FAIL, new ErrorResponse(400, "INTERNAL", errString));
      return;
    }

    var response = new ModuleResponse();

    //response.setComment([]);
    response.setValue(obj);

    app.send(Status.SUCCESS, response);
  });

};
